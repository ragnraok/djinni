// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from example.djinni

#pragma once

#include "djinni_support.hpp"
#include "super_listtener.hpp"

namespace djinni_generated {

class NativeSuperListtener final : ::djinni::JniInterface<::textsort::SuperListtener, NativeSuperListtener> {
public:
    using CppType = std::shared_ptr<::textsort::SuperListtener>;
    using CppOptType = std::shared_ptr<::textsort::SuperListtener>;
    using JniType = jobject;

    using Boxed = NativeSuperListtener;

    ~NativeSuperListtener();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeSuperListtener>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeSuperListtener>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeSuperListtener();
    friend ::djinni::JniClass<NativeSuperListtener>;
    friend ::djinni::JniInterface<::textsort::SuperListtener, NativeSuperListtener>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::textsort::SuperListtener
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void update(const ::textsort::ItemList & items) override;
        void updateSuper() override;

    private:
        friend ::djinni::JniInterface<::textsort::SuperListtener, ::djinni_generated::NativeSuperListtener>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/dropbox/textsort/SuperListtener") };
    const jmethodID method_update { ::djinni::jniGetMethodID(clazz.get(), "update", "(Lcom/dropbox/textsort/ItemList;)V") };
    const jmethodID method_updateSuper { ::djinni::jniGetMethodID(clazz.get(), "updateSuper", "()V") };
};

}  // namespace djinni_generated
