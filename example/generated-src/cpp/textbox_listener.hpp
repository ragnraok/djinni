// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from example.djinni

#pragma once

#include "super_listtener.hpp"
#include <cstdint>
#include <memory>
#include <string>

namespace textsort {

class SuperListtener;
struct ItemList;

class TextboxListener : public SuperListtener {
public:
    TextboxListener() {}
    virtual ~TextboxListener() { this->_objPtr.reset(); }

    static int32_t const VERSION;

    static std::string const STRINGTEST;

    /**update(items: item_list); */
    virtual void updateNew(const ItemList & items) {
        if (this->_objPtr) {
            this->_objPtr->updateNew(items);
        }
    }

    virtual void updateSuper() {
        if (this->_objPtr) {
            this->_objPtr->updateSuper();
        }
    }

    virtual void update(const ItemList & items) {
        if (this->_objPtr) {
            this->_objPtr->update(items);
        }
    }
    static TextboxListener create() {
        return TextboxListener(true);
    }
private:
    void init();
    std::shared_ptr<TextboxListener> _objPtr;
    TextboxListener(bool _fromCpp) {
        if (_fromCpp) {
            init();
        }
    }
};

}  // namespace textsort
