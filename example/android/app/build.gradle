apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "25.0.0"

    defaultConfig {
        applicationId "com.dropbox.textsort"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src', '../../handwritten-src/java', '../../generated-src/java']
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
//    compile 'com.google.code.findbugs:jsr305:3.0.0'
}

def getNdkPath() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkdir = properties.getProperty('ndk.dir', null)
    if (ndkdir == null)
        throw new GradleException('NDK location not found. Define location with ndk.dir in the local.properties file.')

    return ndkdir
}

def getNdkBuildCmd() {

    def ndkbuild = getNdkPath() + "/ndk-build"

    return ndkbuild
}


task ndkBuild(type: Exec) {
    String MainDirectory = System.getProperty("user.dir") + '/app/'
//    File ndkDir = project.getPlugins().getPlugin('android').ndkFolder
//    if (ndkDir == null) {
//        def gradle_project_root = project.rootProject.rootDir
//        throw new GradleException("NDK is not configured. Make sure there is a local.properties " +
//                "file with an ndk.dir entry in the directory ${gradle_project_root}.")
//    }
//    def ndkBuildExecutable = new File(ndkDir, 'ndk-build')
//    if (!ndkBuildExecutable.exists()) {
//        throw new GradleException("Could not find ndk-build. The configured NDK directory ${ndkDir} may not be correct.")
//    }
    environment("NDK_PROJECT_PATH", MainDirectory)
    environment("GYP_CONFIGURATION", "Release")
    commandLine getNdkBuildCmd()
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}

