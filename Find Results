Searching 4394 files for "-Werror"

/Users/ragnarok/Works/MMSource/Kinda/deps/djinni/common.gypi:
    4      # enable android short names (not full paths) for linking libraries
    5      "android_unmangled_name": 1,
    6:     'cflags':    [ '-gdwarf-2', '-Werror', '-Wall', '-Wextra', '-Wno-missing-field-initializers' ],
    7      'cflags_cc': [ '-std=c++11', '-frtti', '-fexceptions', '-Wno-literal-suffix' ],
    8      'xcode_settings': {

/Users/ragnarok/Works/MMSource/Kinda/deps/djinni/test-suite/java/Makefile:
   14  CPP_OBJS := $(patsubst %,$(OBJ_DIR)/%,$(CPP_SRCS:.cpp=.o))
   15
   16: CPPFLAGS := -std=c++1y -I../generated-src/{jni,cpp} -I$(SUPPORT_DIR) -I/System/Library/Frameworks/JavaVM.framework/Headers -I../handwritten-src/cpp -g -Wall -Werror
   17
   18  $(OBJ_DIR)/%.o: %.cpp

/Users/ragnarok/Works/MMSource/Kinda/deps/gtest-1.7.0/aclocal.m4:
  282         ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
  283        # icc doesn't choke on unknown options, it will just issue warnings
  284:       # or remarks (even with -Werror).  So we grep stderr for any message
  285        # that says an option was ignored or not supported.
  286        # When given -MP, icc 7.0 and 7.1 complain thusly:

/Users/ragnarok/Works/MMSource/Kinda/deps/gtest-1.7.0/configure:
    <binary>

/Users/ragnarok/Works/MMSource/Kinda/deps/gtest-1.7.0/xcode/Config/General.xcconfig:
   18
   19  // Strictest warning policy
   20: WARNING_CFLAGS = -Wall -Werror -Wendif-labels -Wnewline-eof -Wno-sign-compare -Wshadow
   21
   22  // Work around Xcode bugs by using external strip. See:

/Users/ragnarok/Works/MMSource/Kinda/deps/gtest.gyp:
    7          'gtest-1.7.0/src/gtest_main.cc',
    8        ],
    9:       'cflags_cc!': [ '-Werror' ],
   10        'xcode_settings': {
   11:         'OTHER_CPLUSPLUSFLAGS!' : ['-Werror'],
   12        },
   13        "include_dirs": [

/Users/ragnarok/Works/MMSource/Kinda/deps/gyp/docs/UserDocumentation.md:
  586            }, { # OS != "win"
  587              'cflags': [
  588:               '-Werror',
  589              ],
  590            }],
  ...
  631  corresponding form with a trailing `!` (exclamation point) to remove
  632  values from a setting.  One useful example of this is to remove the
  633: Linux `-Werror` flag from the global settings defined in
  634  `build/common.gypi`:
  635
  ...
  642            ['OS=="linux"', {
  643              'cflags!': [
  644:               '-Werror',
  645              ],
  646            }],

/Users/ragnarok/Works/MMSource/Kinda/deps/gyp/pylib/gyp/xcode_emulation.py:
  521
  522      if self._Test('GCC_TREAT_WARNINGS_AS_ERRORS', 'YES', default='NO'):
  523:       cflags.append('-Werror')
  524
  525      if self._Test('GCC_WARN_ABOUT_MISSING_NEWLINE', 'YES', default='NO'):

/Users/ragnarok/Works/MMSource/Kinda/deps/sqlite3.gyp:
   20        ],
   21        'cflags!': [
   22:         '-Werror',
   23          '-Wextra',
   24        ],
   25        'xcode_settings': {
   26          'OTHER_CFLAGS' : ['<@(_cflags)'],
   27:         'OTHER_CFLAGS!' : ['-Wextra', '-Werror'],
   28        },
   29        'all_dependent_settings': {

/Users/ragnarok/Works/MMSource/Kinda/deps/xcode-googletest/Dependencies/gtest/aclocal.m4:
  282         ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
  283        # icc doesn't choke on unknown options, it will just issue warnings
  284:       # or remarks (even with -Werror).  So we grep stderr for any message
  285        # that says an option was ignored or not supported.
  286        # When given -MP, icc 7.0 and 7.1 complain thusly:

/Users/ragnarok/Works/MMSource/Kinda/deps/xcode-googletest/Dependencies/gtest/configure:
    <binary>

/Users/ragnarok/Works/MMSource/Kinda/deps/xcode-googletest/Dependencies/gtest/xcode/Config/General.xcconfig:
   18
   19  // Strictest warning policy
   20: WARNING_CFLAGS = -Wall -Werror -Wendif-labels -Wnewline-eof -Wno-sign-compare -Wshadow
   21
   22  // Work around Xcode bugs by using external strip. See:

/Users/ragnarok/Works/MMSource/Kinda/deps/yoga/benchmark/BUCK:
   15          "-fexceptions",
   16          "-Wall",
   17:         "-Werror",
   18          "-O3",
   19          "-std=c11",

/Users/ragnarok/Works/MMSource/Kinda/deps/yoga/lib/fb/BUCK:
   32          "-frtti",
   33          "-Wall",
   34:         "-Werror",
   35          "-Wno-unused-parameter",
   36          "-std=c++11",

/Users/ragnarok/Works/MMSource/Kinda/deps/yoga/yoga-layout/jni/Android.mk:
   31                    -frtti \
   32                    -Wall \
   33:                   -Werror \
   34                    -Wno-unused-parameter \
   35                    -std=c++11 \

/Users/ragnarok/Works/MMSource/Kinda/deps/yoga/Yoga.podspec:
   20        '-fexceptions',
   21        '-Wall',
   22:       '-Werror',
   23        '-std=c11',
   24        '-fPIC'

/Users/ragnarok/Works/MMSource/Kinda/deps/yoga/YOGA_DEFS:
   29    '-fexceptions',
   30    '-Wall',
   31:   '-Werror',
   32    '-O3',
   33  ]

/Users/ragnarok/Works/MMSource/Kinda/example_ios/MX3/Pods/Pods.xcodeproj/project.pbxproj:
   14  		2A453102BCEC65E7B3D3BF7E0F2A45CE /* YGMacros.h in Headers */ = {isa = PBXBuildFile; fileRef = 19FC2F2DB7BDA7EE1A9BBFEB39793323 /* YGMacros.h */; settings = {ATTRIBUTES = (Public, ); }; };
   15  		30612BA3A76DF981702B9A6F56824A2B /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 112F0394CCEDC21A8548E1A2BA652591 /* Foundation.framework */; };
   16: 		37652AFD6E2419667179327355860D55 /* Yoga.c in Sources */ = {isa = PBXBuildFile; fileRef = D45657B9A21DE95DC39D80FC63CDDE00 /* Yoga.c */; settings = {COMPILER_FLAGS = "-fno-omit-frame-pointer -fexceptions -Wall -Werror -std=c11 -fPIC -fno-objc-arc"; }; };
   17  		4BB89509782F102ED98F1D71140C84F3 /* YGLayout.m in Sources */ = {isa = PBXBuildFile; fileRef = D21DE161E2CB0DB68470971CB2B4B551 /* YGLayout.m */; };
   18  		56A49BB07DE014FE386003A02618088B /* YGLayout.h in Headers */ = {isa = PBXBuildFile; fileRef = 54CF4E91583F87A21F8AC7B74918B2C0 /* YGLayout.h */; settings = {ATTRIBUTES = (Public, ); }; };
   ..
   21  		8CA93C019B6142B6D413B88A18364F7E /* YGNodeList.h in Headers */ = {isa = PBXBuildFile; fileRef = 582A6DCB7961FEDBD507C76A82050E97 /* YGNodeList.h */; settings = {ATTRIBUTES = (Public, ); }; };
   22  		A30333155CC856EEEC6538DA6A6B4082 /* Yoga.h in Headers */ = {isa = PBXBuildFile; fileRef = 7B9BBD7168325DE1F9D7AEA6845C0D87 /* Yoga.h */; settings = {ATTRIBUTES = (Public, ); }; };
   23: 		A52E834346AE7EF7CB67BF62D5487EA4 /* YGNodeList.c in Sources */ = {isa = PBXBuildFile; fileRef = B965234728E9C5CF425A498A3E2DF2FC /* YGNodeList.c */; settings = {COMPILER_FLAGS = "-fno-omit-frame-pointer -fexceptions -Wall -Werror -std=c11 -fPIC -fno-objc-arc"; }; };
   24  		A5E0B2F0C171F63E80DBB57BFFECC627 /* YGLayout+Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 47CFE79B2BE969BE18767ED01AC2252F /* YGLayout+Private.h */; settings = {ATTRIBUTES = (Private, ); }; };
   25  		B0F2EA03AA8027CD8FB2EF4A35D10724 /* Yoga-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 4902CC964788A05EAB1548B001C23DA2 /* Yoga-dummy.m */; };

/Users/ragnarok/Works/MMSource/Kinda/mx3.gyp:
   91          'deps/gtest.gyp:gtest',
   92        ],
   93:       'cflags_cc!': [ '-Werror', '-Wextra' ],
   94        'xcode_settings': {
   95:         'OTHER_CPLUSPLUSFLAGS!' : ['-Werror', '-Wextra'],
   96        },
   97        'include_dirs': [
   ..
  107        'type': 'loadable_module',
  108        'mac_xctest_bundle': 1,
  109:       'cflags_cc!': [ '-Werror', '-Wextra' ],
  110        'xcode_settings': {
  111:         'OTHER_CPLUSPLUSFLAGS!' : ['-Werror', '-Wextra'],
  112        },
  113        'dependencies': [

29 matches across 19 files


Searching 2457 files for "-Werror"

/Users/ragnarok/Works/MMSource/djinni/deps/gyp/docs/UserDocumentation.md:
  586            }, { # OS != "win"
  587              'cflags': [
  588:               '-Werror',
  589              ],
  590            }],
  ...
  631  corresponding form with a trailing `!` (exclamation point) to remove
  632  values from a setting.  One useful example of this is to remove the
  633: Linux `-Werror` flag from the global settings defined in
  634  `build/common.gypi`:
  635
  ...
  642            ['OS=="linux"', {
  643              'cflags!': [
  644:               '-Werror',
  645              ],
  646            }],

/Users/ragnarok/Works/MMSource/djinni/deps/gyp/pylib/gyp/xcode_emulation.py:
  521
  522      if self._Test('GCC_TREAT_WARNINGS_AS_ERRORS', 'YES', default='NO'):
  523:       cflags.append('-Werror')
  524
  525      if self._Test('GCC_WARN_ABOUT_MISSING_NEWLINE', 'YES', default='NO'):

/Users/ragnarok/Works/MMSource/djinni/example/libtextsort_jni.target.mk:
   66  MY_CFLAGS_Release := \
   67  	-gdwarf-2 \
   68: 	-Werror \
   69  	-Wall \
   70  	-Wextra \

/Users/ragnarok/Works/MMSource/djinni/example/localhost/CMakeLists.txt:
   38    ../handwritten-src/cpp/*.cpp)
   39
   40: set(textsort_common_flags "-Wall -Werror -std=c++1y")
   41
   42  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${textsort_common_flags}")

/Users/ragnarok/Works/MMSource/djinni/support-lib/djinni_jni.target.mk:
   30  MY_CFLAGS_Debug := \
   31  	-gdwarf-2 \
   32: 	-Werror \
   33  	-Wall \
   34  	-Wextra \
   ..
   58  MY_CFLAGS_Release := \
   59  	-gdwarf-2 \
   60: 	-Werror \
   61  	-Wall \
   62  	-Wextra \

/Users/ragnarok/Works/MMSource/djinni/test-suite/java/CMakeLists.txt:
   38    ../handwritten-src/cpp/*.cpp)
   39
   40: set(test_suite_common_flags "-g -Wall -Werror -std=c++11")
   41
   42  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${test_suite_common_flags}")

9 matches across 6 files
